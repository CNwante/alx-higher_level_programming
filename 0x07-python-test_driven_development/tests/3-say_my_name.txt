====================================================
say_my_name - A function that prints names.
====================================================

===========================
How to use 0-add_integer.py
===========================

This module defines a name ptinting function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

    >>> say_my_name = __import__('3-say_my_name').say_my_name

=============== Cases of Valid Names =================

    >>> say_my_name("Solomon", "Nwante")
    My name is Solomon Nwante

::::

    >>> say_my_name("Dennis Chinedu", "Nwante EDUSCO")
    My name is Dennis Chinedu Nwante EDUSCO

::::

    The parameter ```last_name``` is optional. If no last name is provided,
    an empty string is printed instead.

    >>> say_my_name("Chuks")
    My name is Chuks 

::::

=============== Caese of Invalid Names ==============


    The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
    a TypeError is raised.

::::

    >>> say_my_name(3, "Okechukwu")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::::

    >>> say_my_name("Mbam", ["Nwibo", "Ophoke", "Nwante"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::::

    >>> say_my_name({"Mbam": 3, "Mathew": 7.7}, 14)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::::

    It requires provision of one (fist name) name.

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
